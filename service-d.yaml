apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-spc-sa
  annotations:
    cce.io/dew-resource: "[\"test\"]"
---
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: spc-test
spec:
  provider: cce
  parameters:
    objects: |
      - objectName: "test"
        objectType: "csms"
        objectVersion: "latest"
        jmesPath:
          - path: datasource.url
            objectAlias: datasource.url
          - path: datasource.username
            objectAlias: datasource.username
          - path: datasource.pwd
            objectAlias: datasource.pwd

  secretObjects:
    - secretName: auth-secret  # name of the secret, spc will auto create this in your CCE
      type: Opaque
      data:
        - objectName: datasource.url
          key: datasource.url
        - objectName: datasource.username
          key: datasource.username
        - objectName: datasource.pwd
          key: datasource.pwd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-spc
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      serviceAccountName: nginx-spc-sa   # Reference the created ServiceAccount.
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "spc-test"  # Reference the created SPC.
      containers:
        - name: nginx-spc
          image: nginx:alpine
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: secrets-store-inline
              mountPath: "/mnt/secrets-store"  # Define the mount path of secrets in the container.
              readOnly: true
      imagePullSecrets:
        - name: default-secret

---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 31003  # NodePort (choose an available port in the range 30000-32767)
  type: NodePort


